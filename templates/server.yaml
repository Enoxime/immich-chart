apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "immich.fullname" . }}-server
  labels:
    type: immich-server
    {{- include "immich.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "immich.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        type: immich-server
        {{- include "immich.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "immich.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-server
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- if .Values.immich.configuration }}
            - name: IMMICH_CONFIG_FILE
              value: /config/immich-config.yaml
            {{- end }}
            - name: REDIS_HOSTNAME
              value: '{{ printf "%s-redis-master" .Release.Name }}'
            - name: DB_HOSTNAME
              value: "{{ .Release.Name }}-postgresql"
            - name: DB_USERNAME
              value: "{{ .Values.postgresql.global.postgresql.auth.username }}"
            - name: DB_DATABASE_NAME
              value: "{{ .Values.postgresql.global.postgresql.auth.database }}"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-postgres-credentials
                  key: password
            # see: https://immich.app/docs/administration/jobs-workers/
            - name: IMMICH_WORKERS_INCLUDE
              value: api
            - name: IMMICH_MACHINE_LEARNING_URL
              value: http://{{ include "immich.fullname" . }}-ai:3003
            - name: IMMICH_METRICS
              value: "true"
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/server-info/ping
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/server-info/ping
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
